variables:
  random: &random
    min: 0
    max: 5
    step: 1
    default: 0
  commRadius: &commRadius
    min: 2.0
    max: 10
    step: 1
    default: 1.5
  batchFreq: &batchFreq
    formula: 10
              
export:
  - time
  - molecule: exp
    aggregators: [mean]
    value-filter: ONLYFINITE
  - molecule: roundExecTime
    aggregators: [mean]
    value-filter: ONLYFINITE

seeds:
  scenario: *random
  simulation: *random

network-model:
  type: EuclideanDistance
  parameters: [*commRadius]
  
incarnation: scafi

pools:
  - pool: &program
    - time-distribution:
        type: ExponentialTime
        parameters: [1, 0.5]
      type: Event
      actions:
        - type: RunScafiProgram
          parameters: [chat.basics.Chat, 20]
  - pool: &contents
    - molecule: source
      concentration: 0 # false
    - molecule: commRadius
      concentration: *commRadius
    - molecule: batchFreq
      concentration: *batchFreq
#  - pool: &turnIntoSource
#    - time-distribution:
#        type: Trigger
#        parameters: [*turnIntoSourceAt]
#      type: Event
#      actions:
#        - type: SetLocalMoleculeConcentration
#          parameters: [source, 1]
#  - pool: &contents
#    - molecule: source
#      concentration: 0 # false

positions:
  type: Continuous2DEuclidean
  
displacements:
  - in:
      type: Grid 
      parameters: [0, 0, 20, 20, 1, 1, 0.8, 0.8]
    programs: 
      - *program
    contents: *contents